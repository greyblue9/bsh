public static String bshClassesToSql() { HashMap cmb = new HashMap(); StringBuilder sb = new StringBuilder(76 * 100); for (c: searchClassPath(null, new String[]{"^[^$.]+$"})){ ms = c.getDeclaredMethods(); for (m: ms) { n = c.getName() + "." + String .valueOf(m.getName().charAt(0)).toUpperCase() + m.getName().substring(1); if (!java.lang.reflect.Modifier.isStatic(m.getModifiers())) continue;  v = m;  pts = v.getParameterTypes(); caps = n.charAt(0) + n.replaceAll("[^A-Z]+", "").toLowerCase(); rn = c.getName()+"."+m.getName(); if (pts.length > 0 && pts[0] == String.class) { rn += "(\""; } else if (pts.length == 0) { rn +=  "()"; } else { rn += "("; } if (caps.length() == 1 &&  n.length() >= 2) { caps = caps + String.valueOf(n.charAt(1)).toLowerCase(); } int l = 2; lc = caps; cmb.put(caps, rn); if (m.getName().equals("invoke")) caps = caps.replaceAll("i([^a-z]*)$", "$1"); if (String.valueOf(caps.charAt(0)).toUpperCase().equals(String.valueOf(caps.charAt(0)))) caps = caps.substring(1); sb.append(String.format("insert into utext (title, note) values (\"%s\", \"%s\"); \n", caps, rn.replaceAll("\"", "\\\""))); } } sql = sb.toString().replaceAll("\\(\"\"", "(\"\"\"").replaceAll("\\.invoke\\(", "("); return sql; }