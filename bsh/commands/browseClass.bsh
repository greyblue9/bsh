/**
	Open the class browser to view the specified class.  
	If the argument is a string it is considered to be a class name.  
	If the argument is an object, the class of the object is used.  
	If the arg is a class, the class is used.
	<p>

	Note: To browse the java.lang.String class you can't supply a java.lang.String.
	You'd have to do:  browseClass( java.lang.String.class );
	<p>


	@method void browseClass( java.lang.String | java.lang.Object | java.lang.Class )
*/
import bsh.ClassIdentifier;

browseClass( java.lang.Object o ) 
{
	java.lang.String classname;
	if ( o instanceof java.lang.String)
		classname = o;
	else if ( o instanceof bsh.ClassIdentifier )
		classname = this.namespace.identifierToClass(o).getName();
	else if ( o instanceof java.lang.Class )
		classname = o.getName();
	else 
		classname = o.getClass().getName();

	// really need a way to unset and more poweful testing...
	if ( bsh.system.desktop == void 
			|| bsh.system.desktop.classbrowser == void 
			|| bsh.system.desktop.classbrowser == null ) 
	{
		this.browser = classBrowser();
	} else {
		this.browser = bsh.system.desktop.classbrowser;
		bsh.system.desktop.classbrowser.toFront();
	}

	browser.driveToClass( classname );
}

