
public static void closeFdsSilent() { FileDescriptor __fd = new FileDescriptor(); PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.err, "ISO-8859-1"))); File d = new File(String.format("/proc/%d/fd", org.d6r.PosixFileInputStream.getPid())); for (File fdfile: d.listFiles()) { if (FileUtils.isSymlink(fdfile)) { if (! FileUtils.isBrokenSymlink(fdfile)) { String dest = File.readlink(fdfile.getPath()); if (dest.indexOf("/system/framework") == -1 && dest.indexOf("/dev") != 0) { int fdno = Integer.parseInt(fdfile.getName(), 10); try { __fd.descriptor = fdno; PosixUtil.close(__fd); pw.printf("[%d] ", fdno); } catch (IOException ioex) { pw.println(ioex.getMessage()); } catch (Throwable e) { pw.println(Reflector.getRootCause(e)); } continue; } }; } }; pw.flush(); }

