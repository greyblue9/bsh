
  public static double AVG_MATCH_RATIO = 50.0 / 8000.0;
  
  public static final int CURSOR_SIZE = 2;
  public static final int CURSOR_PATTERN_IDX= 0;
  public static final int CURSOR_VALUE_IDX = 1;
  
  public static int estimate
  (int patternsLength, int valuesLength, int[] cursor)
  {
     int wholePatternsLeft = patternsLength
         - cursor[CURSOR_PATTERN_IDX];
     
     int valuesLeft_crntPattern 
         = valuesLength - cursor[CURSOR_VALUE_IDX];

     int valuesLeft_remainingPatterns 
         = valuesLength * wholePatternsLeft;
          
     int estNumMatchesPerPattern 
       = (valuesLength * AVG_MATCH_RATIO) + 2;
     
     return
       (int) (
         ((double) (
           valuesLeft_crntPattern 
           + valuesLeft_remainingPatterns))
           * AVG_MATCH_RATIO
           + 1.0
       );
  }
  
  public static int estimate
  (int patternsLength, int valuesLength)
  {
     int[] cursor = new int[]{ 0, 0 };
     return estimate(patternsLength, valuesLength, cursor);
  }
  
  public static int estimate
  (Object[] patterns, Object[] values)
  {
     return estimate(patterns.length, values.length);
  }
  
