
public static URI findClassSourceX(Class cls) { Dex dex = org.d6r.ClassInfo.getDex(cls); byte[] rawBytes = UnsafeUtil.getBytes(addr = (int) dex.data.block.address, allocSize = (int) dex.data.block.size); byte[] dexBytes = Arrays.copyOfRange(rawBytes, 40, dex.data.limit()); org.d6r.Range allocRange = UnsafeUtil.getMemoryRanges().filter(Pattern.compile(Integer.toHexString(addr).concat("\\.\\."))).firstOrDefault(); String info = UnsafeUtil.memInfo.get(allocRange); Matcher mchr = Pattern.compile("^([a-z- ]{4}) ([0-9]{8}) ([0-9a-f]{1,}:[0-9a-f]{1,}) ([1-9][0-9]*) +([^\n]+)").matcher(info); if (!mchr.find()) return null; String rawPath = mchr.group(5); String path = Pattern.compile("^(.*)@([^@]+)$").matcher(StringUtils.substringAfter(rawPath, "/data/dalvik-cache")).replaceFirst("$1!/$2").replace('@', '/'); String jarPath = StringUtils.substringBeforeLast(path, "!"); if (new File(jarPath).exists() && new File(jarPath).isFile()) return new URI("jar", String.format("file://%s", jarPath), path.subSequence(jarPath.length(), path.length())); return new URI("file", String.format("%s%s", StringUtils.substringBeforeLast(path, "!"), StringUtils.substringAfterLast(path, "!")), null); };


public static URI findClassSourceX(Dex dex) { int addr = (int) dex.data.block.address, allocSize = (int) dex.data.block.size; org.d6r.Range allocRange = UnsafeUtil.getMemoryRanges().filter(Pattern.compile(Integer.toHexString(addr).concat("\\.\\."))).iterator().next(); String info = UnsafeUtil.memInfo.get(allocRange); Matcher mchr = Pattern.compile("^([a-z- ]{4}) ([0-9]{8}) ([0-9a-f]{1,}:[0-9a-f]{1,}) ([1-9][0-9]*) +([^\n]+)").matcher(info); if (!mchr.find()) return null; String rawPath = mchr.group(5); String path = Pattern.compile("^(.*)@([^@]+)$").matcher(StringUtils.substringAfter(rawPath, "/data/dalvik-cache")).replaceFirst("$1!/$2").replace('@', '/'); String jarPath = StringUtils.substringBeforeLast(path, "!"); if (new File(jarPath).exists() && new File(jarPath).isFile()) return new URI("jar", String.format("file://%s", jarPath), path.subSequence(jarPath.length(), path.length())); return new URI("file", String.format("%s%s", StringUtils.substringBeforeLast(path, "!"), StringUtils.substringAfterLast(path, "!")), null); };

