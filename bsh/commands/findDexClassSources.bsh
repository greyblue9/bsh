public static List<String> findDexClassSources(String searchRegex) { Object srczs = null; Map srczsm = RealArrayMap.toMap(srczs = searchClassPath(null, searchRegex).select(FunctionUtil.eval("""return m -> { Pair.of(m.getName(), Reflect.getfldval(org.d6r.ClassInfo.getDex(m), "data").limit()); }"""))); Map sizemap = RealArrayMap.toMap(Thread.currentThread().getContextClassLoader().pathList.dexElements.select(FunctionUtil.eval("""return m -> { var zip = Reflect.get(m,"zipFile"); if (zip == null) { Reflector.invokeOrDefault(m, "maybeInit"); }; return Pair.of(zip.getEntry("classes.dex").getSize(), zip.getName()); }""")));  List srcal = new ArrayList(); for (Integer srcsz: srczsm.values().uniq()) { srcal.add(sizemap.get(Long.valueOf(((Integer)srcsz).intValue()))); }; return srcal; }