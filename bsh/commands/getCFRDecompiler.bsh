
public static CFRDecompiler getCFRDecompiler() { import org.benf.cfr.reader.api.ClassFileSource; CollectionUtil.getInterpreter().setu("defcfs", CFRDecompiler.getClassFileSource()); cfs = new ClassFileSource() { public Collection addJar(String path) { if (CollectionUtil.getInterpreter().getu("defcfs") == null) return new ArrayList(); return CollectionUtil.getInterpreter().getu("defcfs").addJar(path); } public org.benf.cfr.reader.bytecode.analysis.parse.utils.Pair getClassFileContent(String name) { try { InputStream is = org.cojen.classfile.TypeLoaderClassFileDataLoader.getDefault().getClassData(name.replaceAll("\\.class", "")); if (is != null) return new org.benf.cfr.reader.bytecode.analysis.parse.utils.Pair(IOUtils.toByteArray(is), name); } catch (Throwable e) {  }; return defcfs.getClassFileContent(name); } public String getPossiblyRenamedPath(String var0) { return defcfs.getPossiblyRenamedPath(var0); } public void informAnalysisRelativePathDetail(String var0, String var1) { defcfs.informAnalysisRelativePathDetail(var0, var1); } }; CollectionUtil.getInterpreter().setu("cfs", cfs);  CFRDecompiler.cfs = cfs;  CFRDecompiler.dccs = new org.benf.cfr.reader.state.DCCommonState(CFRDecompiler.getDCCS().options, cfs); return Reflect.allocateInstance(CFRDecompiler.class); }

