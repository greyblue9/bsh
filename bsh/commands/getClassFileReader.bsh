public static com.strobel.assembler.metadata.ClassFileReader getClassFileReader(byte[] classBytes) { import com.strobel.assembler.ir.ConstantPool.TypeInfoEntry; SortedMap ifaces = new TreeMap(); cpTags = RealArrayMap.toMap(new Pair[]{ Pair.of(7, Pair.of("Class", 2)), Pair.of(6, Pair.of("Double", 8)), Pair.of(9, Pair.of("Fieldref", 4)), Pair.of(4, Pair.of("Float", 4)), Pair.of(3, Pair.of("Integer", 4)), Pair.of(11, Pair.of("InterfaceMethodref", 4)), Pair.of(5, Pair.of("Long", 8)), Pair.of(15, Pair.of("MethodHandle", 4)), Pair.of(10, Pair.of("Methodref", 4)), Pair.of(12, Pair.of("NameAndType", 4)), Pair.of(8, Pair.of("String", 2)), Pair.of(1, Pair.of("Utf8", 2)) }); byte[] cb = classBytes; buf = new com.strobel.assembler.metadata.Buffer(cb); magic = buf.readInt(); System.err.printf("magic: %08x", magic); minorVer = buf.readUnsignedShort(); majorVer = buf.readUnsignedShort(); cp = com.strobel.assembler.ir.ConstantPool.read(buf); pos = buf.position(); int acc = buf.readUnsignedShort();  int thiz = buf.readUnsignedShort(); int supr = buf.readUnsignedShort(); int ifaceCount = buf.readUnsignedShort(); for (int i=0; i<ifaceCount; ++i) { ifaces.put(idx = buf.readUnsignedShort(), cp.get(idx).getName()); };  className = cp.get(thiz).getName(); superclassName = cp.get(supr).getName(); cfr = new com.strobel.assembler.metadata.ClassFileReader(options =com.strobel.assembler.metadata.ClassFileReader.OPTION_PROCESS_CODE, resolver=ProcyonUtil.getMetadataResolver(),  majorVersion=52, minorVersion=0, buf, cp, acc, cp.get(thiz), cp.get(supr), ifaces.keySet().select(FunctionUtil.eval("""return m -> { cp.get(m); }""")).toArray(new TypeInfoEntry[0])); }
public static com.strobel.assembler.metadata.ClassFileReader getClassFileReader(String className) { return getClassFileReader(IOUtils.toByteArray(org.cojen.classfile.TypeLoaderClassFileDataLoader.getDefault().getClassData(className))); }

