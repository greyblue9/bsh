
public static org.jf.dexlib2.dexbacked.DexBackedDexFile getDexBackedDexFile(String dexFileOrZipPath) { File inFile = new File(dexFileOrZipPath.toString()); if (!inFile.exists()) throw new FileNotFoundException(dexFileOrZipPath.toString()); InputStream is = null; int byte0 = -2; try { is = new FileInputStream(inFile); byte0 = is.read(); } catch (IOException ioe) { throw new RuntimeException(String.format("IO failure reading byte 0 of [%s]: %s: %s", dexFileOrZipPath, ioe, Reflector.getRootCause(ioe)), ioe); } finally { IOUtils.closeQuietly(is); }; if (byte0 < 0) throw new IllegalStateException(String.format("%s@%08x.read() for byte 0 of [%s] %s", is == null? "FileInputStream": is.getClass().getSimpleName(), is == null? 0: System.identityHashCode(is), dexFileOrZipPath, byte0 == -2? "did not return (or was never called)": String.format("returned %d", byte0)));  boolean isZip = (byte0 == (int) 'P'); org.jf.dexlib2.dexbacked.DexBackedDexFile dexBackedDf = (isZip)? org.jf.dexlib2.DexFileFactory.loadDexEntry(inFile, "classes.dex", true, org.jf.dexlib2.Opcodes.forApi(21, true)): org.jf.dexlib2.DexFileFactory.loadDexFile(inFile.getPath(), org.jf.dexlib2.Opcodes.forApi(21, true)); System.err.printf("[INFO] Loaded %s from [%s]: %d classes, %d methods\n", dexBackedDf.getClass().getSimpleName(), inFile, dexBackedDf.getClassCount(), dexBackedDf.getMethodCount()); return dexBackedDf; };


public static org.jf.dexlib2.dexbacked.DexBackedDexFile getDexBackedDexFile(InputStream dexOrZipStream) { InputStream is = null; int byte0 = -2; try { is = new BufferedInputStream(dexOrZipStream); is.mark(4); byte0 = is.read(); is.reset(); } catch (IOException ioe) { throw new RuntimeException(String.format("IO failure reading byte 0 of [%s]: %s: %s", dexFileOrZipPath, ioe, Reflector.getRootCause(ioe)), ioe); } finally { }; if (byte0 < 0) throw new IllegalStateException(String.format("%s@%08x.read() for byte 0 of [%s] %s", is == null? "InputStream": is.getClass().getSimpleName(), is == null? 0: System.identityHashCode(is), dexOrZipStream, byte0 == -2? "did not return (or was never called)": String.format("returned %d", byte0)));  boolean isZip = (byte0 == (int) 'P'); InputStream dexStream = (isZip)? new ByteArrayInputStream(ZipUtil.toByteArray(is, "classes.dex")): is; org.jf.dexlib2.dexbacked.DexBackedDexFile dexBackedDf = org.jf.dexlib2.dexbacked.DexBackedDexFile.fromInputStream(org.jf.dexlib2.Opcodes.forApi(21, true), dexStream); System.err.printf("[INFO] Loaded %s from [%s]: %d classes, %d methods\n", dexBackedDf.getClass().getSimpleName(), dexOrZipStream.getClass().getSimpleName(), dexBackedDf.getClassCount(), dexBackedDf.getMethodCount()); return dexBackedDf; }

