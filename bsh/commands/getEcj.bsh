public static org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl getEcj() { import org.eclipse.jdt.internal.compiler.problem.ProblemReporter; import org.eclipse.jdt.internal.compiler.parser.Parser; import org.eclipse.jdt.internal.compiler.parser.Parser.LocalTypeKind; import org.eclipse.jdt.internal.compiler.CompilationResult; import org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration; import org.eclipse.jdt.internal.compiler.ast.ASTNode; import org.eclipse.jdt.internal.compiler.ast.TypeDeclaration; import org.eclipse.jdt.internal.compiler.lookup.ClassScope; import org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding; import org.eclipse.jdt.internal.compiler.lookup.PackageBinding; import org.eclipse.jdt.internal.compiler.ast.ImportReference; import org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment; import org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;  import org.eclipse.jdt.internal.compiler.batch.FileSystem; import org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy; import org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies; import org.eclipse.jdt.internal.compiler.tool.EclipseCompilerRequestor; import org.eclipse.jdt.internal.compiler.tool.EclipseCompiler; import org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl; import org.eclipse.jdt.internal.compiler.IProblemFactory; import org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory; import org.eclipse.jdt.internal.compiler.problem.ProblemReporter; import org.eclipse.jdt.internal.compiler.impl.CompilerOptions; import javax.tools.DiagnosticCollector;  IErrorHandlingPolicy policy = DefaultErrorHandlingPolicies.proceedWithAllProblems(); CompilerOptions options = new CompilerOptions(); IProblemFactory problemFactory = new DefaultProblemFactory();  ProblemReporter probRep = new ProblemReporter(policy, options, problemFactory); org.eclipse.jdt.internal.compiler.batch.FileSystem environment = new org.eclipse.jdt.internal.compiler.batch.FileSystem(new String[0], new String[0], null);  Map settings = new TreeMap(); EclipseCompiler main = new EclipseCompilerImpl( new PrintWriter(System.out), new PrintWriter(System.err), true ); DiagnosticCollector diag = new DiagnosticCollector(); EclipseCompilerRequestor requestor = new EclipseCompilerRequestor(main, diag, problemFactory); return main; };

