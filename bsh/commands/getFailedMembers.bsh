
public static List getFailedMembers(String lc) { List al = new ArrayList(); lers = lc.matchLines("(unable to optimize|couldn.t find) ((?:[a-z]+ )*)([^ ]+)(?: ?ref 0x[0-9a-f]+ at 0x[0-9a-f]+ in)? L([^;]*);[\\.(]?([^ \n]*)[)]?"); for (int i=0,ilen=lers.size(); i<ilen; ++i) { List pts = lers[i]; Object[] objs = StringUtils.split(pts[1].trim(), " ").select(FunctionUtil.eval("return m -> { Modifier.getDeclaredField(m.trim().toUpperCase()).get(null); }")); int[] iarr = (objs != null && objs.length > 0 && objs[0] instanceof Integer)? ArrayUtils.toPrimitive(Arrays.copyOf(objs, objs.length, Integer[].class)): new int[]{ 0 }; (accum = new com.google.common.math.StatsAccumulator()).addAll(iarr); mods = (int)accum.sum(); String mbStr = String.format("%s\t%s\t%s%s%s\t%s", "couldn't find".equals(pts[0])? "FAIL": "WARN", pts[2], Modifier.toString(mods), mods != 0? " ": "", ClassInfo.typeToName(pts[3]), pts[4]); al.add(mbStr); }; return al; }

