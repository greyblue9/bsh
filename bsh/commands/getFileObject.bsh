import javax.tools.JavaFileObject;

public static JavaFileObject getFileObject(String srcString, String className) { String simpleName = className.replaceAll("^.*\\.([^.]+)$", "$1"); long creationTime = System.currentTimeMillis(); JavaFileObject _jfo = new JavaFileObject() { public boolean delete() { return false; } public CharSequence getCharContent(boolean ignoreEncodingErrors) { return _srcString; } public long getLastModified() { return _creationTime; } public String getName() { String retName = String.format("%s.java", _simpleName); System.err.printf("getName() -> \"%s\";\n", retName); return retName; } public InputStream openInputStream() { System.err.printf("openInputStream();\n"); return new ByteArrayInputStream(_srcString.getBytes("UTF-8")); } public OutputStream openOutputStream() { throw new UnsupportedOperationException(); } public Reader openReader(boolean ignoreEncodingErrors) { System.err.printf("openReader();\n"); return new StringReader(_srcString); } public Writer openWriter() { throw new UnsupportedOperationException(); } public java.net.URI toUri() { URI retUri = new URI(String.format("%s.java", _simpleName)); System.err.printf("toUri() -> URI(%s);\n", retUri); return retUri; } public javax.lang.model.element.Modifier getAccessLevel() { return javax.lang.model.element.Modifier.PUBLIC; } public javax.tools.JavaFileObject.Kind getKind() { return javax.tools.JavaFileObject.Kind.SOURCE; } public javax.lang.model.element.NestingKind getNestingKind() { return javax.lang.model.element.NestingKind.TOP_LEVEL; } public boolean isNameCompatible(String var0, javax.tools.JavaFileObject.Kind var1) { System.err.printf("isNameCompatible(\"%s\", %s);\n", var0, var1); return _simpleName.equals(var0); } }; NameSpace foNs = Reflect.getfldval(Reflect.getfldval(Reflect.getfldval(_jfo, "h"), "this$0"), "namespace"); Map vars = foNs.getVariables(); vars.put("_srcString", new bsh.Variable(Pair.of("_srcString", srcString))); vars.put("_simpleName", new bsh.Variable(Pair.of("_simpleName", simpleName))); vars.put("_creationTime", new bsh.Variable(Pair.of("_creationTime", creationTime))); return _jfo; };

public static JavaFileObject getFileObject(String srcString) { String simpleName = null; if (!(srcString.length() > 255 || !new File(srcString).exists())) { String path = srcString; srcString = FileUtils.readFileToString(new File(path)); simpleName = new File(path).getName(); } else { try { simpleName = getSimpleName(getJcTree(stripGenerics(srcString))); } catch (Throwable e) { System.err.printf("Failed creating JcTree to parse out class simple name: %s\n", e); throw e; }; }; String className = StringUtils.join(new String[]{ getPackage(srcString), simpleName }, "."); System.err.printf("className: [%s]\n", className); return getFileObject(srcString, className); }


public static JavaFileObject getFileObject(String srcString, String className, String uriFormat) { String simpleName = className.replaceAll("^.*\\.([^.]+)$", "$1"); long creationTime = System.currentTimeMillis(); JavaFileObject _jfo = new JavaFileObject() { public boolean delete() { return false; } public CharSequence getCharContent(boolean ignoreEncodingErrors) { return _srcString; } public long getLastModified() { return _creationTime; } public String getName() { String retName = String.format("%s.java", _simpleName); System.err.printf("getName() -> \"%s\";\n", retName); return retName; } public InputStream openInputStream() { System.err.printf("openInputStream();\n"); return new ByteArrayInputStream(_srcString.getBytes("UTF-8")); } public OutputStream openOutputStream() { throw new UnsupportedOperationException(); } public Reader openReader(boolean ignoreEncodingErrors) { System.err.printf("openReader();\n"); return new StringReader(_srcString); } public Writer openWriter() { throw new UnsupportedOperationException(); } public java.net.URI toUri() { URI retUri = new URI(String.format(_uriFormat, _simpleName)); System.err.printf("toUri() -> URI(%s);\n", retUri); return retUri; } public javax.lang.model.element.Modifier getAccessLevel() { return javax.lang.model.element.Modifier.PUBLIC; } public javax.tools.JavaFileObject.Kind getKind() { return javax.tools.JavaFileObject.Kind.SOURCE; } public javax.lang.model.element.NestingKind getNestingKind() { return javax.lang.model.element.NestingKind.TOP_LEVEL; } public boolean isNameCompatible(String var0, javax.tools.JavaFileObject.Kind var1) { System.err.printf("isNameCompatible(\"%s\", %s);\n", var0, var1); return _simpleName.equals(var0); } }; NameSpace foNs = Reflect.getfldval(Reflect.getfldval(Reflect.getfldval(_jfo, "h"), "this$0"), "namespace"); Map vars = foNs.getVariables(); vars.put("_srcString", new bsh.Variable(Pair.of("_srcString", srcString))); vars.put("_simpleName", new bsh.Variable(Pair.of("_simpleName", simpleName))); vars.put("_creationTime", new bsh.Variable(Pair.of("_creationTime", creationTime))); vars.put("_uriFormat", new bsh.Variable(Pair.of("_uriFormat", uriFormat))); return _jfo; };

