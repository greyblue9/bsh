
public static Map getMethodComments(Iterable<Member> mtds) { Map mbm = new TreeMap(new ToStringComparator());   Class cls = mtds.iterator().next().getDeclaringClass(); String methodName = mtds.iterator().next().getName(); Iterable<Object> mbs = parseJava(IOUtils.toString(SourceUtil.findSource(cls))).getMiddle().getResult().get().getTypes()[0].getMembers();  for (Object mb: mbs) { if (!(mb instanceof com.github.javaparser.ast.body.MethodDeclaration)) continue; String name = mb.getName().toString(); if (! name.equals(methodName)) continue;   List<Class> params = resolveTypeNames(new ArrayList(mb.getParameters()).select(FunctionUtil.eval("return m -> { m.getType().getName(); }")));  String rawsig = ProcyonUtil.buildRawSignature(params.toArray(new Class[0])); System.out.println(rawsig); System.out.println(mb.getComment().get().toString().replaceAll("(^|\n) *\\*(?:[\t ]+|)([^ \n*])", "$1$2")); System.out.println(dumpMembers.colorize(cls.getDeclaredMethod(name, params.toArray(new Class[0]))));  mbm.put(cls.getDeclaredMethod(name, params.toArray(new Class[0])), mb.getComment().get().toString().replaceAll("(^|\n) *\\*(?:[\t ]+|)([^ \n*])", "$1$2")); }; return mbm; }

