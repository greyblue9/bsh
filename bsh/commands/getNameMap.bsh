
public static Pair getNameMap() { com.sun.tools.javac.util.Context ctx = null; Pair nm_nt = CollectionUtil.dbg.get("nm_nt"); if (nm_nt == null) { ctx = CollectionUtil.dbg.get("ctx"); if (ctx == null) { ctx = new com.sun.tools.javac.util.Context(); CollectionUtil.dbg.put("ctx", ctx); }; Collection optc = CollectionUtil2.typeFilter(ctx.ht.values(), com.sun.tools.javac.util.Options.class); com.sun.tools.javac.util.Options opts = optc.isEmpty()? new com.sun.tools.javac.util.Options(ctx): optc.iterator().next();  Collection namesc = CollectionUtil2.typeFilter(ctx.ht.values(), com.sun.tools.javac.util.Names.class); com.sun.tools.javac.util.Names names = com.sun.tools.javac.util.Names.instance(ctx); com.sun.tools.javac.util.SharedNameTable nt = ctx.get(com.sun.tools.javac.util.SharedNameTable.class); if (nt == null) { ctx.put(com.sun.tools.javac.util.SharedNameTable.class, (nt = names.createTable(opts))); };    nm = new TreeMap();        nm.put("StreamSupport", nt.fromString("StreamSupport"));  nm.put("stream", nt.fromString("stream")); CollectionUtil.dbg.put("nm", nm); CollectionUtil.dbg.put("nm_nt", nm_nt = Pair.of(nm, nt)); CollectionUtil.dbg.put("nt", nt); }; return nm_nt; };


