
public static MethodDefinition getSuper(MethodDefinition md) { Set<String> seen = new TreeSet<String>(); String sig = md.getErasedSignature(); String name = md.getName(); TypeDefinition dtype = md.getDeclaringType().resolve(); String dtypeName = dtype.getErasedSignature(); ArrayDeque q = new ArrayDeque(); q.offer(dtype); while (! q.isEmpty()) { TypeReference stypeRef = q.pollFirst(); String stypeName = stypeRef.getErasedSignature(); if (seen.contains(stypeName)) continue; seen.add(stypeName); TypeDefinition stype = (stypeRef instanceof TypeDefinition)? (TypeDefinition) stypeRef: stypeRef.resolve(); if (! stypeName.equals(dtypeName)) { MethodDefinition superMd = ProcyonUtil.findMatchingMethodDefinition(stype, name, sig); if (superMd != null) return superMd; }; if ("java.lang.Object".equals(stypeName) || stypeName == null) continue; List<TypeReference> gptypes = Iterables.concat(Arrays.asList(stype.getBaseType()), stype.getExplicitInterfaces()).toList(); q.addAll(gptypes); }; return null; };

