public static String jclazzDecompile(Class cls) { byte[] bs = IOUtils.toByteArray(is = CollectionUtil.getClassPool().find(cls.getName()).openConnection().getInputStream()); is.close(); bais = new ByteArrayInputStream(bs);    isbuilder = new ru.andrew.jclazz.decompiler.InputStreamBuilder() { public InputStream getInputStream(String namevar) { System.out.printf("getInputStream(\"%s\");\n", namevar); URL res = CollectionUtil.getClassPool().find(namevar); if (res == null) { Collection myres = ClassLoaders.getResources(Thread.currentThread().getContextClassLoader(), namevar); if (myres.size() == 0) { return new ByteArrayInputStream(new byte[0]); }; res = myres.iterator().next(); } ; byte[] bb = IOUtils.toByteArray(iss = res.openConnection().getInputStream()); iss.close(); return new ByteArrayInputStream(bb); } };  cn = cls.getName(); sn = cls.getName().replace('.', '/');  clazz = new ru.andrew.jclazz.core.Clazz(cls.getName()); csv = ru.andrew.jclazz.decompiler.ClazzSourceViewFactory.getClazzSourceView(clazz); csv.setIndent("  "); src_ = csv.getSource(); return src_; }

