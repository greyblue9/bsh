public static Object[] listToArray(Iterable lwr) { Iterator it = lwr.iterator(); int size = 0; clst = null; while (it.hasNext()) { crnt = it.next(); size++; tobj = (crnt instanceof java.lang.ref.WeakReference)? ((java.lang.ref.WeakReference)crnt).get(): crnt; if (tobj == null) continue; tcls = tobj.getClass(); if (clst == null) { clst = tcls; print("Set to "+clst.getName()); } else { while (! clst.isAssignableFrom(tcls)) { print(clst.getName() + " not assignable from " + tcls.getName()); clst = clst.getSuperclass(); print(clst); } } } Object[] array = java.lang.reflect.Array.newInstance(clst, size); Iterator it = lwr.iterator(); int idx = 0; while (it.hasNext()) { crnt = it.next(); tobj = (crnt instanceof java.lang.ref.WeakReference)? ((java.lang.ref.WeakReference)crnt).get(): crnt; array[idx++] = tobj; } return array; }

