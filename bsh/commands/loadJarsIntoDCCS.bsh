public static Object loadJarsIntoDCCS(Object dccs) { File base = new File("/external_sd/_projects/sdk/bsh/trunk"); Collection paths = new HashSet(Arrays.asList(new File(base, "bsh-mod.jar"))); String buildScript = IOUtils.toString(new FileInputStream(new File(base, "build.sh"))); mr = java.util.regex.Pattern.compile("-l[\t \"]*([A-Za-z_.0-9./-]+\\.jar)").matcher(buildScript); cp = new javassist.ClassPool(false); while (mr.find()) { if (mr.group(1).toString().indexOf("/") == 0) { paths.add(new File(mr.group(1))); } else { paths.add(new File(base, mr.group(1).replaceAll("\\.\\./", ""))); } } File[] jarLibs = paths.toArray(new File[0]); CollectionUtil.print(jarLibs); for (File jar: jarLibs) { dccs.explicitlyLoadJar( jar.getPath()); } return dccs; }

