doc=getDocWithBaseUrl("https://mvnrepository.com/artifact/de.schlichtherle.truezip"); List<URL> urls = hrefs = doc.select("a[href^=/artifact/] > picture").select(FunctionUtil.bind("return m -> { new(URI, doc.baseUri()).resolve(m.parent().attr(\"href\")).toURL(); }")); for (URL purl: urls) { try { System.err.println(purl); doc2 = Jsoup.parse(purl); List<URL> urls2 = doc2.select("a").select(FunctionUtil.bind("return m -> { var uri = new(URI, doc2.baseUri()).resolve(m.attr(\"href\")); return (uri.getPath().startsWith(String.format(\"/%s/\", Paths.get(new(URI, doc2.baseUri()).getPath()).subpath(0, 2))))? uri: null; }", "doc2", doc2)).filter("(?!(?<=usages))$").sort();  URL doc3Url = urls2[-1].toURL(); doc3=Jsoup.parse(doc3Url); URL dlurl =new URL(doc3.select("a[href*=jar]").firstOrDefault().attr("href"));  String name = com.strobel.core.CollectionUtilities.last(Paths.get(dlurl.getFile())).toString();   byte[] bytes = IOUtils.toByteArray(dlurl); File dest; FileUtils.writeByteArrayToFile(dest = new File(new File("/data/media/0/Download"), name), bytes); System.err.println(dest); } catch (Throwable e) { Reflector.getRootCause(e).printStackTrace(); }; };