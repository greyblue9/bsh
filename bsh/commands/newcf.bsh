public static edu.rice.cs.cunit.classFile.ClassFile newcf(bsh.ClassIdentifier c) { Class cls = ((Class) ((bsh.ClassIdentifier)c).getTargetClass()); try { URL url = CollectionUtil.getClassPool().find(cls.getName()); String className = cls.getName(); System.err.printf("URL = %s\n", url); if (url != null) { URLConnection conn = url.openConnection(); System.err.printf("conn = %s\n", conn);  conn.setUseCaches(false); conn.setDefaultUseCaches(false); InputStream is = conn.getInputStream(); System.err.printf("is = %s\n", is); InputStream is2 = new org.apache.commons.io.input.AutoCloseInputStream(is);  return new edu.rice.cs.cunit.classFile.ClassFile(is2); }; byte[] bc = dex2jari(new String[]{ className }, bcMap = new HashMap()).get(className.replace('.', '/').concat(".class")); bcis = new org.apache.commons.io.input.AutoCloseInputStream(new ByteArrayInputStream(bc)); return new edu.rice.cs.cunit.classFile.ClassFile(bcis); } finally { this.namespace.clear(); } }

