public static Triple[] printConstPool(Object td) { Object cstp = td.ConstantPool; static String CPKEY = "com.strobel.assembler.ir.ConstantPool$Key"; static LazyMember<Field> CP_TAG = LazyMember.of(CPKEY, "_tag"); static LazyMember<Field> CP_REF_INDEX1 = LazyMember.of(CPKEY, "_refIndex1"); static LazyMember<Field> CP_REF_INDEX2 = LazyMember.of(CPKEY, "_refIndex2"); static LazyMember<Field> CP_STRING_VAL1 = LazyMember.of(CPKEY, "_stringValue1"); static LazyMember<Field> CP_STRING_VAL2 = LazyMember.of(CPKEY, "_stringValue2"); static LazyMember<Field> CP_INT_VAL = LazyMember.of(CPKEY, "_intValue"); static LazyMember<Field> CP_LONG_VAL = LazyMember.of(CPKEY, "_longValue"); return  cstp._entryMap.keySet().select(FunctionUtil.eval("""return m -> { var idx1 = CP_REF_INDEX1.get().get(m); var idx2 = CP_REF_INDEX2.get().get(m); var iv1 = CP_INT_VAL.get().get(m); return Triple.of(dumpMembers.colorize(Reflect.getfldval(m,"_tag").toString(),"1;32"), idx1 != -1? idx1: (idx2 != -1? idx2: iv1), CP_STRING_VAL1.get().get(m)); }""")).print();; }

