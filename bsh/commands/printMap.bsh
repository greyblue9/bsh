
public static void printMap(Map map) { List<Pair> pairs = new LinkedList<Pair>(); int maxLen = 0; try { System.err.println(dumpMembers.colorize(String.format("%s<%s, %s>", map.getClass().getCanonicalName(), map.keySet().iterator().next().getClass().getCanonicalName(), map.values().iterator().next().getClass().getCanonicalName()), "1;36") + " size="+map.size()); } catch (Throwable e) { ; };  StringBuilder sb = new StringBuilder(76 * 50); Object[] keys = CollectionUtil.toArray(map.keySet()); if (keys instanceof Comparable[]) Arrays.sort(keys); else Arrays.sort(keys, new ToStringComparator()); for (Object key: keys) { Object val = map.get(key); String keyStr = key != null? (key instanceof AccessibleObject? dumpMembers.colorize(key): String.valueOf(key)): "\u001b[1;30m<null>\u001b[0m"; String valStr = val != null? (val instanceof AccessibleObject? dumpMembers.colorize(val): String.valueOf(val)): "\u001b[1;30m<null>\u001b[0m"; pairs.add(Pair.of(keyStr, valStr)); maxLen = Math.max(maxLen, Math.max(keyStr.length(), valStr.length())); }; for (Pair pair: pairs) { sb.append(String.format(maxLen >= 60? "%s\n    = ": "%24s = ", pair.getKey())).append(pair.getValue()).append(maxLen >= 60? "\n\n": "\n"); } System.out.println(sb.toString()); }

