public static com.strobel.decompiler.languages.java.ast.CompilationUnit slowDecompileToAst(TypeDefinition td) { Deque<TypeDefinition> q = new ArrayDeque(); q.offerLast(td); List<MethodDefinition> ml = new ArrayList(); while (!q.isEmpty()) { TypeDefinition type = q.pollFirst(); Collection<MethodDefinition> mds = type.getDeclaredMethods(); ml.addAll(mds); System.err.printf("Found %d methods in %s %s\n", mds.size(), type.getErasedSignature().indexOf('$') == -1? "type": "nested type", ClassInfo.typeToName(type.getErasedSignature())); for (TypeDefinition nestedType: type.getDeclaredTypes()) { q.offerLast(nestedType); }; }; Collections.reverse(ml); List<EntityDeclaration> masts = new ArrayList(); for (MethodDefinition md: ml) { md._body = null; md.getBody()._exceptionHandlers._isFrozen = false; md.getBody()._exceptionHandlers.clear(); masts.add(mast = ProcyonUtil.decompileToAst(md)); System.err.println(mast.getText()); }; com.strobel.decompiler.languages.java.ast.CompilationUnit ast = ProcyonUtil.decompileToAst(td); return ast; };