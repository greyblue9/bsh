
public static byte[] writeDex(org.jf.dexlib2.dexbacked.DexBackedClassDef[] classDefs) { org.jf.dexlib2.writer.pool.DexPool p = DexRemix.newDexPool(); classDefs.select(FunctionUtil.bind("return m -> { p.classSection.intern(m); m; }")); import org.jf.dexlib2.writer.ClassSection; import org.jf.dexlib2.writer.io.DexDataStore; import org.jf.dexlib2.writer.io.FileDataStore; File tmpdexFile = File.createTempFile("tmpdex_DexFileStore", ".dex"); DexDataStore ddat = new FileDataStore(tmpdexFile); System.err.printf( "Writing %s to %s (temporary file: [%s]) ...\n", p.getClass().getSimpleName(), ddat.getClass().getSimpleName(), tmpdexFile.getPath() ); try { p.writeTo(ddat); } finally { ddat.close(); } System.err.printf( "Reading dex class bytes from [%s] ...\n", tmpdexFile.getPath() ); byte[] data = null; try { data = FileUtils.readFileToByteArray(tmpdexFile); } finally { tmpdexFile.delete(); }; return data; };

