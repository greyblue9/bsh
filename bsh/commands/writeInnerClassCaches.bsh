import java.util.Map.Entry;


public static void writeInnerClassCaches() { File serialPersistDir = new File("/data/local/dexSerialData/innerClassGathers"); if (!serialPersistDir.exists()) serialPersistDir.mkdirs();  for (Entry e: Dex2Java.gatherCache.entrySet()) { com.android.dex.Dex dex = e.getKey(); com.googlecode.dex2jar.v3.V3InnerClzGather icg = e.getValue(); int dexSize = ((ByteBuffer) Reflect.getfldval(dex, "data")).capacity(); com.android.dex.ClassDef firstDef = dex.classDefs().iterator().next(); String firstDefClassName = dex.typeNames().get(firstDef.getTypeIndex()); String dexKey = Pair.of(Integer.valueOf(dexSize), firstDefClassName); System.out.printf("dex key = %s [%d inner classes]\n", dexKey, icg.getClasses().size()); ByteArrayOutputStream baos = new ByteArrayOutputStream(); ObjectOutputStream oos = new ObjectOutputStream(baos); oos.writeObject(icg); oos.flush(); oos.close(); byte[] serialData = baos.toByteArray(); System.err.printf("  - Serialized data length: %d bytes\n", serialData.length); String fileName = String.format("dex_%012d_%s.icg.ser", dexSize, ClassInfo.typeToName(firstDefClassName)); File outputFile = new File(serialPersistDir, fileName); FileUtils.writeByteArrayToFile(outputFile, serialData); if (outputFile.exists() && outputFile.length() == serialData.length) { System.err.printf("  - Wrote to [%s], size = %d\n", outputFile.getPath(), outputFile.length()); } else { System.err.printf("  - Failed to write %d bytes to [%s]: %s\n", serialData.length, outputFile.getPath(), outputFile.exists()? (outputFile.length() == serialData.length? "Unknown error (length is correct)": String.format("Length incorrect; expected: %s, actual: %d", serialData.length, outputFile.length())): "Unable to create output file"); } }; }

