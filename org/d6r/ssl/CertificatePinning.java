package org.d6r.ssl;

import android.util.Base64;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.security.KeyStore;
import java.util.zip.GZIPInputStream;
import javax.net.ssl.SSLContext;
import javax.net.ssl.TrustManagerFactory;

public class CertificatePinning {
  
  public static final SSLContext SSL_CONTEXT;
  public static final KeyStore TRUST_STORE;
  
  static {
    try {
      byte[] decode = Base64.decode("", 0);
      KeyStore instance = KeyStore.getInstance("BKS");
      try (final GZIPInputStream gZIPInputStream 
           = new GZIPInputStream(new ByteArrayInputStream(decode)))
      {
        instance.load(gZIPInputStream, null);
        TRUST_STORE = instance;
        TrustManagerFactory instance2 = TrustManagerFactory.getInstance(
          TrustManagerFactory.getDefaultAlgorithm()
        );
        instance2.init(instance);
        SSLContext instance3 = SSLContext.getInstance("TLS");
        instance3.init(null, instance2.getTrustManagers(), null);
        SSL_CONTEXT = instance3;
      }
    } catch (Throwable e) {
      throw new RuntimeException("Failed to initialize SSLContext", e);
    }
  }
  
  public CertificatePinning() {
  }
}


